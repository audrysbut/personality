{"version":3,"sources":["dto/personality.ts","components/personality-table/personality-table.tsx","pages/root/root-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CognitiveFunctionType","row","width","border","borderRadius","padding","mainRow","background","fontWeight","mainColumn","TableTitle","title","style","PersonalityTable","personalities","types","map","p","type","heroes","hero","parents","parent","children","child","paddingRight","textAlign","paddingLeft","Ni","Si","Ti","Fi","Ne","Se","Te","Fe","introverts","filter","startsWith","extraverts","RootPage","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cc40930.chunk.js","sourcesContent":["enum CognitiveFunctionType {\n  Ni = 'Ni',\n  Ne = 'Ne',\n  Ti = 'Ti',\n  Te = 'Te',\n  Si = 'Si',\n  Se = 'Se',\n  Fi = 'Fi',\n  Fe = 'Fe',\n}\n\nconst Ni = CognitiveFunctionType.Ni;\nconst Si = CognitiveFunctionType.Si;\nconst Ti = CognitiveFunctionType.Ti;\nconst Fi = CognitiveFunctionType.Fi;\n\nconst Ne = CognitiveFunctionType.Ne;\nconst Se = CognitiveFunctionType.Se;\nconst Te = CognitiveFunctionType.Te;\nconst Fe = CognitiveFunctionType.Fe;\n\nexport interface Personality {\n  type: string;\n  hero: CognitiveFunctionType;\n  parent: CognitiveFunctionType;\n  child: CognitiveFunctionType;\n  // inferior: CognitiveFunctionType\n  // nemesis: CognitiveFunctionType\n  // critic: CognitiveFunctionType\n  // trickster: CognitiveFunctionType\n  // demon: CognitiveFunctionType\n}\n\nexport const personalities: Personality[] = [\n  { type: 'ENTJ', hero: Te, parent: Ni, child: Se },\n  { type: 'ESTJ', hero: Te, parent: Si, child: Ne },\n  { type: 'ENFJ', hero: Fe, parent: Ni, child: Se },\n  { type: 'ESFJ', hero: Fe, parent: Si, child: Ne },\n  { type: 'ENFP', hero: Ne, parent: Fi, child: Te },\n  { type: 'ENTP', hero: Ne, parent: Ti, child: Fe },\n  { type: 'ESFP', hero: Se, parent: Fi, child: Te },\n  { type: 'ESTP', hero: Se, parent: Ti, child: Fe },\n  { type: 'INFJ', hero: Ni, parent: Fe, child: Ti },\n  { type: 'INTJ', hero: Ni, parent: Te, child: Fi },\n  { type: 'ISTJ', hero: Si, parent: Te, child: Fi },\n  { type: 'ISFJ', hero: Si, parent: Fe, child: Ti },\n  { type: 'INTP', hero: Ti, parent: Ne, child: Si },\n  { type: 'ISTP', hero: Ti, parent: Se, child: Ni },\n  { type: 'INFP', hero: Fi, parent: Ne, child: Si },\n  { type: 'ISFP', hero: Fi, parent: Se, child: Ni },\n];\n","import { CSSProperties } from 'react';\nimport { Personality } from '../../dto/personality';\n\ninterface PersonalityTableProps {\n  title: string;\n  personalities: Personality[];\n}\n\nconst row: CSSProperties = {\n  width: '70px',\n  border: '1px solid black',\n  borderRadius: '3px',\n  padding: '10px',\n};\n\nconst mainRow: CSSProperties = {\n  background: 'lightgreen',\n  fontWeight: 'bold',\n};\n\nconst mainColumn: CSSProperties = {\n  background: 'lightgreen',\n};\n\ninterface TableTitleProps {\n  title: string;\n}\nconst TableTitle = ({ title }: TableTitleProps) => {\n  return <td style={{ ...row, ...mainColumn }}>{title}</td>;\n};\n\nexport const PersonalityTable = ({\n  personalities,\n  title,\n}: PersonalityTableProps) => {\n  const types = personalities.map((p) => (\n    <td style={{ ...row, ...mainRow }}>{p.type}</td>\n  ));\n  const heroes = personalities.map((p) => <td style={row}>{p.hero}</td>);\n  const parents = personalities.map((p) => <td style={row}>{p.parent}</td>);\n  const children = personalities.map((p) => <td style={row}>{p.child}</td>);\n\n  const type = <TableTitle title=\"Type:\" />;\n  const hero = <TableTitle title=\"Hero:\" />;\n  const parent = <TableTitle title=\"Parent:\" />;\n  const child = <TableTitle title=\"Inferior:\" />;\n\n  return (\n    <div\n      style={{\n        paddingRight: '10px',\n      }}\n    >\n      <h4 style={{ textAlign: 'left', paddingLeft: '10px' }}>{title}</h4>\n      <table>\n        <tr>{[type, ...types]}</tr>\n        <tr>{[hero, ...heroes]}</tr>\n        <tr>{[parent, ...parents]}</tr>\n        <tr>{[child, ...children]}</tr>\n      </table>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PersonalityTable } from '../../components/personality-table/personality-table';\nimport { personalities, Personality } from '../../dto/personality';\n\nconst introverts: Personality[] = personalities.filter((p) =>\n  p.type.startsWith('I')\n);\n\nconst extraverts: Personality[] = personalities.filter((p) =>\n  p.type.startsWith('E')\n);\n\nexport const RootPage = () => {\n  return (\n    <div>\n      <PersonalityTable personalities={introverts} title=\"Introverts:\" />\n      <PersonalityTable personalities={extraverts} title=\"Extroverts: \" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { RootPage } from './pages/root/root-page';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <RootPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}