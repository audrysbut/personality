{"version":3,"sources":["pages/root/root-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["introverts","type","filter","p","startsWith","Introverts","introvertTable","map","style","width","RootPage","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA8BMA,EA5B+B,CACnC,CAAEC,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,SAYsCC,QAAO,SAACC,GAAD,OACrDA,EAAEF,KAAKG,WAAW,QAGdC,EAAa,WACjB,IAAMC,EAAiBN,EAAWO,KAAI,SAACJ,GAAD,OAAO,6BAAKA,EAAEF,UACpD,OACE,mCACE,uBAAOO,MAAO,CAAEC,MAAO,QAAvB,SACE,6BAAKH,SAMAI,EAAW,WACtB,OACE,gCACE,6CACA,cAAC,EAAD,QC/BSC,MAdf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,aCIGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.528315e8.chunk.js","sourcesContent":["import React from 'react';\n\nconst personalities: Personality[] = [\n  { type: 'ENTJ' },\n  { type: 'ESTJ' },\n  { type: 'ENFJ' },\n  { type: 'ESFJ' },\n  { type: 'ENTP' },\n  { type: 'ESTP' },\n  { type: 'ENFP' },\n  { type: 'ESFP' },\n  { type: 'INTJ' },\n  { type: 'ISTJ' },\n  { type: 'INFJ' },\n  { type: 'ISFJ' },\n  { type: 'INTP' },\n  { type: 'ISTP' },\n  { type: 'INFP' },\n  { type: 'ISFP' },\n];\n\ninterface Personality {\n  type: string;\n}\n\n//TODO: expose once needed\n\n// const extraverts: Personality[] = personalities.filter((p) =>\n//   p.type.startsWith('E')\n// );\nconst introverts: Personality[] = personalities.filter((p) =>\n  p.type.startsWith('I')\n);\n\nconst Introverts = (): JSX.Element => {\n  const introvertTable = introverts.map((p) => <td>{p.type}</td>);\n  return (\n    <>\n      <table style={{ width: '100%' }}>\n        <tr>{introvertTable}</tr>\n      </table>\n    </>\n  );\n};\n\nexport const RootPage = () => {\n  return (\n    <div>\n      <h4>Introverts:</h4>\n      <Introverts />\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { RootPage } from './pages/root/root-page';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <RootPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}