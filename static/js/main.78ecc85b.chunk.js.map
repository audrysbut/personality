{"version":3,"sources":["data/personality.ts","components/cognitive-function-table/cognitive-function-table.tsx","pages/cognitive-functions/cognitive-functions-page.tsx","navigation/navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CognitiveFunctionType","row","width","border","borderRadius","padding","activeRow","background","mainRow","fontWeight","mainColumn","TableTitle","title","style","CognitiveFunctionTable","personalities","state","useState","types","map","p","type","heroes","personality","hero","parents","parent","children","child","nemesis","inferiors","inferior","critics","critic","tricksters","trickster","demons","demon","nemesi","tricster","paddingRight","textAlign","paddingLeft","Cell","setState","onMouseOver","onMouseOut","Ni","Si","Ti","Fi","Ne","Se","Te","Fe","introverts","filter","startsWith","extraverts","CognitiveFunctionPage","NavigationBar","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78ecc85b.chunk.js","sourcesContent":["enum CognitiveFunctionType {\n  Ni = 'Ni',\n  Ne = 'Ne',\n  Ti = 'Ti',\n  Te = 'Te',\n  Si = 'Si',\n  Se = 'Se',\n  Fi = 'Fi',\n  Fe = 'Fe',\n}\n\nconst Ni = CognitiveFunctionType.Ni;\nconst Si = CognitiveFunctionType.Si;\nconst Ti = CognitiveFunctionType.Ti;\nconst Fi = CognitiveFunctionType.Fi;\n\nconst Ne = CognitiveFunctionType.Ne;\nconst Se = CognitiveFunctionType.Se;\nconst Te = CognitiveFunctionType.Te;\nconst Fe = CognitiveFunctionType.Fe;\n\nexport interface Personality {\n  type: string;\n  hero: CognitiveFunctionType;\n  parent: CognitiveFunctionType;\n  child: CognitiveFunctionType;\n  inferior: CognitiveFunctionType;\n  nemesis: CognitiveFunctionType;\n  critic: CognitiveFunctionType;\n  trickster: CognitiveFunctionType;\n  demon: CognitiveFunctionType;\n}\n\nexport const personalities: Personality[] = [\n  {\n    type: 'ENTJ',\n    hero: Te,\n    parent: Ni,\n    child: Se,\n    nemesis: Ti,\n    inferior: Fi,\n    critic: Ne,\n    trickster: Si,\n    demon: Fe,\n  },\n  {\n    type: 'ESTJ',\n    hero: Te,\n    parent: Si,\n    child: Ne,\n    nemesis: Ti,\n    inferior: Fi,\n    critic: Se,\n    trickster: Ni,\n    demon: Fe,\n  },\n  {\n    type: 'ENFJ',\n    hero: Fe,\n    parent: Ni,\n    child: Se,\n    nemesis: Fi,\n    inferior: Ti,\n    critic: Ne,\n    trickster: Si,\n    demon: Te,\n  },\n  {\n    type: 'ESFJ',\n    hero: Fe,\n    parent: Si,\n    child: Ne,\n    nemesis: Fi,\n    inferior: Ti,\n    critic: Se,\n    trickster: Ni,\n    demon: Te,\n  },\n  {\n    type: 'ENFP',\n    hero: Ne,\n    parent: Fi,\n    child: Te,\n    nemesis: Ni,\n    inferior: Si,\n    critic: Fe,\n    trickster: Ti,\n    demon: Se,\n  },\n  {\n    type: 'ENTP',\n    hero: Ne,\n    parent: Ti,\n    child: Fe,\n    nemesis: Ni,\n    inferior: Si,\n    critic: Te,\n    trickster: Fi,\n    demon: Se,\n  },\n  {\n    type: 'ESFP',\n    hero: Se,\n    parent: Fi,\n    child: Te,\n    nemesis: Si,\n    inferior: Ni,\n    critic: Fe,\n    trickster: Ti,\n    demon: Ne,\n  },\n  {\n    type: 'ESTP',\n    hero: Se,\n    parent: Ti,\n    child: Fe,\n    nemesis: Si,\n    inferior: Ni,\n    critic: Te,\n    trickster: Fi,\n    demon: Ne,\n  },\n  {\n    type: 'INFJ',\n    hero: Ni,\n    parent: Fe,\n    child: Ti,\n    nemesis: Ne,\n    inferior: Se,\n    critic: Fi,\n    trickster: Te,\n    demon: Si,\n  },\n  {\n    type: 'INTJ',\n    hero: Ni,\n    parent: Te,\n    child: Fi,\n    nemesis: Ne,\n    inferior: Se,\n    critic: Ti,\n    trickster: Fe,\n    demon: Si,\n  },\n  {\n    type: 'ISTJ',\n    hero: Si,\n    parent: Te,\n    child: Fi,\n    nemesis: Se,\n    inferior: Ne,\n    critic: Ti,\n    trickster: Fe,\n    demon: Ni,\n  },\n  {\n    type: 'ISFJ',\n    hero: Si,\n    parent: Fe,\n    child: Ti,\n    nemesis: Se,\n    inferior: Ne,\n    critic: Fi,\n    trickster: Te,\n    demon: Ni,\n  },\n  {\n    type: 'INTP',\n    hero: Ti,\n    parent: Ne,\n    child: Si,\n    nemesis: Te,\n    inferior: Fe,\n    critic: Ni,\n    trickster: Se,\n    demon: Fi,\n  },\n  {\n    type: 'ISTP',\n    hero: Ti,\n    parent: Se,\n    child: Ni,\n    nemesis: Te,\n    inferior: Fe,\n    critic: Si,\n    trickster: Ne,\n    demon: Fi,\n  },\n  {\n    type: 'INFP',\n    hero: Fi,\n    parent: Ne,\n    child: Si,\n    nemesis: Fe,\n    inferior: Te,\n    critic: Ni,\n    trickster: Se,\n    demon: Ti,\n  },\n  {\n    type: 'ISFP',\n    hero: Fi,\n    parent: Se,\n    child: Ni,\n    nemesis: Fe,\n    inferior: Te,\n    critic: Si,\n    trickster: Ne,\n    demon: Ti,\n  },\n];\n","import React, { CSSProperties, useState } from 'react';\nimport { Personality } from '../../data/personality';\n\ninterface CognitiveFunctionTableProps {\n  title: string;\n  personalities: Personality[];\n}\n\nconst row: CSSProperties = {\n  width: '70px',\n  border: '1px solid black',\n  borderRadius: '3px',\n  padding: '10px',\n};\n\nconst activeRow: CSSProperties = {\n  width: '70px',\n  border: '1px solid black',\n  borderRadius: '3px',\n  padding: '10px',\n  background: 'lightblue',\n};\n\nconst mainRow: CSSProperties = {\n  background: 'lightgreen',\n  fontWeight: 'bold',\n};\n\nconst mainColumn: CSSProperties = {\n  background: 'lightgreen',\n};\n\ninterface TableTitleProps {\n  title: string;\n}\nconst TableTitle = ({ title }: TableTitleProps) => {\n  return <td style={{ ...row, ...mainColumn }}>{title}</td>;\n};\n\nexport const CognitiveFunctionTable = ({\n  personalities,\n  title,\n}: CognitiveFunctionTableProps) => {\n  const state = useState('');\n  const types = personalities.map((p) => (\n    <td style={{ ...row, ...mainRow }}>{p.type}</td>\n  ));\n  const heroes = personalities.map((p) => (\n    <Cell personality={p} state={state} hero />\n  ));\n  const parents = personalities.map((p) => (\n    <Cell personality={p} state={state} parent />\n  ));\n  const children = personalities.map((p) => (\n    <Cell personality={p} state={state} child />\n  ));\n  const nemesis = personalities.map((p) => (\n    <Cell personality={p} state={state} nemesis />\n  ));\n  const inferiors = personalities.map((p) => (\n    <Cell personality={p} state={state} inferior />\n  ));\n  const critics = personalities.map((p) => (\n    <Cell personality={p} state={state} critic />\n  ));\n  const tricksters = personalities.map((p) => (\n    <Cell personality={p} state={state} trickster />\n  ));\n  const demons = personalities.map((p) => (\n    <Cell personality={p} state={state} demon />\n  ));\n\n  const type = <TableTitle title=\"Type:\" />;\n  const hero = <TableTitle title=\"Hero:\" />;\n  const parent = <TableTitle title=\"Parent:\" />;\n  const child = <TableTitle title=\"Child:\" />;\n  const nemesi = <TableTitle title=\"Nemesis:\" />;\n  const inferior = <TableTitle title=\"Inferior:\" />;\n  const critic = <TableTitle title=\"Critic:\" />;\n  const tricster = <TableTitle title=\"Trickster:\" />;\n  const demon = <TableTitle title=\"Demon:\" />;\n\n  return (\n    <div\n      style={{\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{ textAlign: 'left', paddingLeft: '10px', fontWeight: 'bold' }}\n      >\n        {title}\n      </div>\n      <table>\n        <tr>{[type, ...types]}</tr>\n        <tr>{[hero, ...heroes]}</tr>\n        <tr>{[parent, ...parents]}</tr>\n        <tr>{[child, ...children]}</tr>\n        <tr>{[inferior, ...inferiors]}</tr>\n        <tr>{[nemesi, ...nemesis]}</tr>\n        <tr>{[critic, ...critics]}</tr>\n        <tr>{[tricster, ...tricksters]}</tr>\n        <tr>{[demon, ...demons]}</tr>\n      </table>\n    </div>\n  );\n};\n\ninterface CellProperties {\n  personality: Personality;\n  state: [string, React.Dispatch<React.SetStateAction<string>>];\n  hero?: boolean;\n  parent?: boolean;\n  child?: boolean;\n  inferior?: boolean;\n  nemesis?: boolean;\n  critic?: boolean;\n  trickster?: boolean;\n  demon?: boolean;\n}\n\nconst Cell = (p: CellProperties) => {\n  const [state, setState] = p.state;\n  const isActive = p.personality.type === state;\n  const style = isActive ? activeRow : row;\n\n  const getTitle = () => {\n    if (p.hero) {\n      return p.personality.hero;\n    }\n    if (p.parent) {\n      return p.personality.parent;\n    }\n    if (p.child) {\n      return p.personality.child;\n    }\n    if (p.inferior) {\n      return p.personality.inferior;\n    }\n    if (p.nemesis) {\n      return p.personality.nemesis;\n    }\n    if (p.trickster) {\n      return p.personality.trickster;\n    }\n    if (p.critic) {\n      return p.personality.critic;\n    }\n    if (p.demon) {\n      return p.personality.demon;\n    }\n  };\n  const title = getTitle();\n  return (\n    <td\n      style={style}\n      onMouseOver={() => {\n        setState(p.personality.type);\n      }}\n      onMouseOut={() => {\n        setState('');\n      }}\n    >\n      {title}\n    </td>\n  );\n};\n","import React from 'react';\nimport { CognitiveFunctionTable } from '../../components/cognitive-function-table/cognitive-function-table';\nimport { personalities, Personality } from '../../data/personality';\n\nconst introverts: Personality[] = personalities.filter((p) =>\n  p.type.startsWith('I')\n);\n\nconst extraverts: Personality[] = personalities.filter((p) =>\n  p.type.startsWith('E')\n);\n\nexport const CognitiveFunctionPage = () => {\n  return (\n    <div>\n      <CognitiveFunctionTable personalities={introverts} title=\"Introverts:\" />\n      <CognitiveFunctionTable personalities={extraverts} title=\"Extroverts:\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NavigationBar = () => {\n  return (\n    <div>\n      {/* <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/cognitiveFunctions\">Cognitive functions</Link>\n          </li>\n        </ul>\n      </nav> */}\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { CognitiveFunctionPage } from './pages/cognitive-functions/cognitive-functions-page';\nimport { NavigationBar } from './navigation/navigation';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <CognitiveFunctionPage />\n        </Route>\n        {/* <Route path=\"/cognitiveFunctions\">\n          <CognitiveFunctionPage />\n        </Route> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}