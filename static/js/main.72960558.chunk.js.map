{"version":3,"sources":["data/cognitive-funcion-data.ts","components/cognitive-function-table/cognitive-function-table.tsx","data/cognitive-function-roles.ts","pages/cognitive-functions/cognitive-functions-page.tsx","navigation/navigation.tsx","pages/inspect/active-personality-type-selector.ts","pages/comparison/cognitive-function-view.tsx","pages/comparison/cell.tsx","pages/comparison/personality-detail-title.tsx","pages/comparison/personality-detail.tsx","pages/comparison/segment.tsx","pages/comparison/personality-type-selector.tsx","pages/comparison/comparison-page.tsx","pages/inspect/header-column.tsx","pages/inspect/personality-row.tsx","pages/inspect/row-column.tsx","pages/inspect/inspect-table.tsx","pages/inspect/inspect-page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CognitiveFunctionType","row","width","border","borderRadius","padding","activeRow","background","mainRow","fontWeight","mainColumn","TableTitle","title","style","CognitiveFunctionTable","personalities","state","useState","types","map","p","type","heroes","personality","hero","parents","parent","children","child","nemesis","inferiors","inferior","critics","critic","tricksters","trickster","demons","demon","nemesi","tricster","paddingRight","textAlign","paddingLeft","Cell","setState","onMouseOver","onMouseOut","CogntiveFunctionPosition","Ni","Si","Ti","Fi","Ne","Se","Te","Fe","intj","entj","estj","enfj","esfj","enfp","entp","esfp","estp","infj","istj","isfj","intp","istp","infp","isfp","introverts","extraverts","CognitiveFunctionPage","NavigationBar","to","useActivePersonalityTypes","activePersonalities","setActivePersonalities","activate","includes","deactivatePersonality","filter","toggle","isActive","data","cognitiveFunctionType","traits","rowStyle","borderRight","CognitiveFunctionView","borderBottom","borderTop","borderCollapse","undefined","states","cursorOver","setCursorOver","active","onClick","getPersonalityTypeColor","height","userSelect","lineHeight","selected","intuitive","sensor","thinker","feeler","judger","perceiver","PersonalityDetailTitle","setActive","opacity","position","right","top","onMouseLeave","PersonalityDetail","minWidth","marginRight","paddingBottom","overflow","CognitiveFunctionDescriptions","cognitiveFunction","SingleCognitiveFunction","records","t","length","getCognitiveFunctionData","color","traitsView","Segment","type1","type2","type3","type4","titles","PersonalityTypeSelector","inTypes","isTypes","enTypes","esTypes","ComparisonPage","detailComponents","HeaderColumn","PersonalityRow","activeColor","borderWeight","RowColumn","direct","informative","initiative","responding","control","moving","margin","fontSize","marginBottom","directRow","informativeRow","initiativeRow","respondingRow","controlRow","movingRow","inCharge","starter","seeItThrough","behind","InspectTable","inChargeRow","startersRow","sitRow","behindRow","inChargeRows","starters","sits","behinds","InspectPage","PersonalityDetailView","personalitiesView","display","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72960558.chunk.js","sourcesContent":["export enum CognitiveFunctionType {\n  Ni = 'Ni',\n  Ne = 'Ne',\n  Ti = 'Ti',\n  Te = 'Te',\n  Si = 'Si',\n  Se = 'Se',\n  Fi = 'Fi',\n  Fe = 'Fe',\n}\n\nexport const Ni = CognitiveFunctionType.Ni;\nexport const Si = CognitiveFunctionType.Si;\nexport const Ti = CognitiveFunctionType.Ti;\nexport const Fi = CognitiveFunctionType.Fi;\n\nexport const Ne = CognitiveFunctionType.Ne;\nexport const Se = CognitiveFunctionType.Se;\nexport const Te = CognitiveFunctionType.Te;\nexport const Fe = CognitiveFunctionType.Fe;\n\nexport type PersonalityType =\n  | 'INFJ'\n  | 'INTJ'\n  | 'ENTJ'\n  | 'ESTJ'\n  | 'ENFJ'\n  | 'ESFJ'\n  | 'ENFP'\n  | 'ENTP'\n  | 'ESFP'\n  | 'ESTP'\n  | 'ISTJ'\n  | 'ISFJ'\n  | 'INTP'\n  | 'ISTP'\n  | 'INFP'\n  | 'ISFP';\n\nexport interface Personality {\n  type: PersonalityType;\n  hero: CognitiveFunctionType;\n  parent: CognitiveFunctionType;\n  child: CognitiveFunctionType;\n  inferior: CognitiveFunctionType;\n  nemesis: CognitiveFunctionType;\n  critic: CognitiveFunctionType;\n  trickster: CognitiveFunctionType;\n  demon: CognitiveFunctionType;\n}\n\nexport const intj: Personality = {\n  type: 'INTJ',\n  hero: Ni,\n  parent: Te,\n  child: Fi,\n  nemesis: Ne,\n  inferior: Se,\n  critic: Ti,\n  trickster: Fe,\n  demon: Si,\n};\n\nexport const entj: Personality = {\n  type: 'ENTJ',\n  hero: Te,\n  parent: Ni,\n  child: Se,\n  nemesis: Ti,\n  inferior: Fi,\n  critic: Ne,\n  trickster: Si,\n  demon: Fe,\n};\n\nexport const estj: Personality = {\n  type: 'ESTJ',\n  hero: Te,\n  parent: Si,\n  child: Ne,\n  nemesis: Ti,\n  inferior: Fi,\n  critic: Se,\n  trickster: Ni,\n  demon: Fe,\n};\n\nexport const enfj: Personality = {\n  type: 'ENFJ',\n  hero: Fe,\n  parent: Ni,\n  child: Se,\n  nemesis: Fi,\n  inferior: Ti,\n  critic: Ne,\n  trickster: Si,\n  demon: Te,\n};\n\nexport const esfj: Personality = {\n  type: 'ESFJ',\n  hero: Fe,\n  parent: Si,\n  child: Ne,\n  nemesis: Fi,\n  inferior: Ti,\n  critic: Se,\n  trickster: Ni,\n  demon: Te,\n};\n\nexport const enfp: Personality = {\n  type: 'ENFP',\n  hero: Ne,\n  parent: Fi,\n  child: Te,\n  nemesis: Ni,\n  inferior: Si,\n  critic: Fe,\n  trickster: Ti,\n  demon: Se,\n};\n\nexport const entp: Personality = {\n  type: 'ENTP',\n  hero: Ne,\n  parent: Ti,\n  child: Fe,\n  nemesis: Ni,\n  inferior: Si,\n  critic: Te,\n  trickster: Fi,\n  demon: Se,\n};\n\nexport const esfp: Personality = {\n  type: 'ESFP',\n  hero: Se,\n  parent: Fi,\n  child: Te,\n  nemesis: Si,\n  inferior: Ni,\n  critic: Fe,\n  trickster: Ti,\n  demon: Ne,\n};\n\nexport const estp: Personality = {\n  type: 'ESTP',\n  hero: Se,\n  parent: Ti,\n  child: Fe,\n  nemesis: Si,\n  inferior: Ni,\n  critic: Te,\n  trickster: Fi,\n  demon: Ne,\n};\n\nexport const infj: Personality = {\n  type: 'INFJ',\n  hero: Ni,\n  parent: Fe,\n  child: Ti,\n  nemesis: Ne,\n  inferior: Se,\n  critic: Fi,\n  trickster: Te,\n  demon: Si,\n};\n\nexport const istj: Personality = {\n  type: 'ISTJ',\n  hero: Si,\n  parent: Te,\n  child: Fi,\n  nemesis: Se,\n  inferior: Ne,\n  critic: Ti,\n  trickster: Fe,\n  demon: Ni,\n};\n\nexport const isfj: Personality = {\n  type: 'ISFJ',\n  hero: Si,\n  parent: Fe,\n  child: Ti,\n  nemesis: Se,\n  inferior: Ne,\n  critic: Fi,\n  trickster: Te,\n  demon: Ni,\n};\n\nexport const intp: Personality = {\n  type: 'INTP',\n  hero: Ti,\n  parent: Ne,\n  child: Si,\n  nemesis: Te,\n  inferior: Fe,\n  critic: Ni,\n  trickster: Se,\n  demon: Fi,\n};\n\nexport const istp: Personality = {\n  type: 'ISTP',\n  hero: Ti,\n  parent: Se,\n  child: Ni,\n  nemesis: Te,\n  inferior: Fe,\n  critic: Si,\n  trickster: Ne,\n  demon: Fi,\n};\n\nexport const infp: Personality = {\n  type: 'INFP',\n  hero: Fi,\n  parent: Ne,\n  child: Si,\n  nemesis: Fe,\n  inferior: Te,\n  critic: Ni,\n  trickster: Se,\n  demon: Ti,\n};\n\nexport const isfp: Personality = {\n  type: 'ISFP',\n  hero: Fi,\n  parent: Se,\n  child: Ni,\n  nemesis: Fe,\n  inferior: Te,\n  critic: Si,\n  trickster: Ne,\n  demon: Ti,\n};\n","import React, { CSSProperties, useState } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\n\ninterface CognitiveFunctionTableProps {\n  title: string;\n  personalities: Personality[];\n}\n\nconst row: CSSProperties = {\n  width: '70px',\n  border: '1px solid black',\n  borderRadius: '3px',\n  padding: '10px',\n};\n\nconst activeRow: CSSProperties = {\n  width: '70px',\n  border: '1px solid black',\n  borderRadius: '3px',\n  padding: '10px',\n  background: 'lightblue',\n};\n\nconst mainRow: CSSProperties = {\n  background: 'lightgreen',\n  fontWeight: 'bold',\n};\n\nconst mainColumn: CSSProperties = {\n  background: 'lightgreen',\n};\n\ninterface TableTitleProps {\n  title: string;\n}\nconst TableTitle = ({ title }: TableTitleProps) => {\n  return <td style={{ ...row, ...mainColumn }}>{title}</td>;\n};\n\nexport const CognitiveFunctionTable = ({\n  personalities,\n  title,\n}: CognitiveFunctionTableProps) => {\n  const state = useState('');\n  const types = personalities.map((p) => (\n    <td style={{ ...row, ...mainRow }}>{p.type}</td>\n  ));\n  const heroes = personalities.map((p) => (\n    <Cell personality={p} state={state} hero />\n  ));\n  const parents = personalities.map((p) => (\n    <Cell personality={p} state={state} parent />\n  ));\n  const children = personalities.map((p) => (\n    <Cell personality={p} state={state} child />\n  ));\n  const nemesis = personalities.map((p) => (\n    <Cell personality={p} state={state} nemesis />\n  ));\n  const inferiors = personalities.map((p) => (\n    <Cell personality={p} state={state} inferior />\n  ));\n  const critics = personalities.map((p) => (\n    <Cell personality={p} state={state} critic />\n  ));\n  const tricksters = personalities.map((p) => (\n    <Cell personality={p} state={state} trickster />\n  ));\n  const demons = personalities.map((p) => (\n    <Cell personality={p} state={state} demon />\n  ));\n\n  const type = <TableTitle title=\"Type:\" />;\n  const hero = <TableTitle title=\"Hero:\" />;\n  const parent = <TableTitle title=\"Parent:\" />;\n  const child = <TableTitle title=\"Child:\" />;\n  const nemesi = <TableTitle title=\"Nemesis:\" />;\n  const inferior = <TableTitle title=\"Inferior:\" />;\n  const critic = <TableTitle title=\"Critic:\" />;\n  const tricster = <TableTitle title=\"Trickster:\" />;\n  const demon = <TableTitle title=\"Demon:\" />;\n\n  return (\n    <div\n      style={{\n        paddingRight: '10px',\n      }}\n    >\n      <div\n        style={{ textAlign: 'left', paddingLeft: '10px', fontWeight: 'bold' }}\n      >\n        {title}\n      </div>\n      <table>\n        <tr>{[type, ...types]}</tr>\n        <tr>{[hero, ...heroes]}</tr>\n        <tr>{[parent, ...parents]}</tr>\n        <tr>{[child, ...children]}</tr>\n        <tr>{[inferior, ...inferiors]}</tr>\n        <tr>{[nemesi, ...nemesis]}</tr>\n        <tr>{[critic, ...critics]}</tr>\n        <tr>{[tricster, ...tricksters]}</tr>\n        <tr>{[demon, ...demons]}</tr>\n      </table>\n    </div>\n  );\n};\n\ninterface CellProperties {\n  personality: Personality;\n  state: [string, React.Dispatch<React.SetStateAction<string>>];\n  hero?: boolean;\n  parent?: boolean;\n  child?: boolean;\n  inferior?: boolean;\n  nemesis?: boolean;\n  critic?: boolean;\n  trickster?: boolean;\n  demon?: boolean;\n}\n\nconst Cell = (p: CellProperties) => {\n  const [state, setState] = p.state;\n  const isActive = p.personality.type === state;\n  const style = isActive ? activeRow : row;\n\n  const getTitle = () => {\n    if (p.hero) {\n      return p.personality.hero;\n    }\n    if (p.parent) {\n      return p.personality.parent;\n    }\n    if (p.child) {\n      return p.personality.child;\n    }\n    if (p.inferior) {\n      return p.personality.inferior;\n    }\n    if (p.nemesis) {\n      return p.personality.nemesis;\n    }\n    if (p.trickster) {\n      return p.personality.trickster;\n    }\n    if (p.critic) {\n      return p.personality.critic;\n    }\n    if (p.demon) {\n      return p.personality.demon;\n    }\n  };\n  const title = getTitle();\n  return (\n    <td\n      style={style}\n      onMouseOver={() => {\n        setState(p.personality.type);\n      }}\n      onMouseOut={() => {\n        setState('');\n      }}\n    >\n      {title}\n    </td>\n  );\n};\n","import {\n  CognitiveFunctionType,\n  Fe,\n  Fi,\n  Ne,\n  Ni,\n  Se,\n  Si,\n  Te,\n  Ti,\n} from './cognitive-funcion-data';\n\nexport enum CogntiveFunctionPosition {\n  hero = 'hero',\n  parent = 'parent',\n  child = 'child',\n  inferior = 'inferior',\n  nemesis = 'nemesis',\n  critic = 'critic',\n  trickster = 'trickster',\n  demon = 'demon',\n}\n\nexport const hero = CogntiveFunctionPosition.hero;\nexport const parent = CogntiveFunctionPosition.parent;\nexport const child = CogntiveFunctionPosition.child;\nexport const inferior = CogntiveFunctionPosition.inferior;\nexport const nemesis = CogntiveFunctionPosition.nemesis;\nexport const trickster = CogntiveFunctionPosition.trickster;\nexport const critic = CogntiveFunctionPosition.critic;\nexport const demon = CogntiveFunctionPosition.demon;\n\ninterface CognitiveFunctionData {\n  cognitiveFunctionType: CognitiveFunctionType;\n  traits: string[];\n}\n\nconst data: CognitiveFunctionData[] = [\n  {\n    cognitiveFunctionType: Si,\n    traits: ['Long term memory', 'Conviction', 'Discipline', 'Honor', 'Duty'],\n  },\n  {\n    cognitiveFunctionType: Se,\n    traits: ['Physics', 'Mechanics', 'Short term memory', 'What others do'],\n  },\n  {\n    cognitiveFunctionType: Fi,\n    traits: ['Morals', 'Principles'],\n  },\n  {\n    cognitiveFunctionType: Fe,\n    traits: ['Ethics', 'Empathy', 'Guilt'],\n  },\n  {\n    cognitiveFunctionType: Ti,\n    traits: ['Logic', 'True / False'],\n  },\n  {\n    cognitiveFunctionType: Te,\n    traits: ['Rationale', 'Belief', 'Standarts'],\n  },\n  {\n    cognitiveFunctionType: Ne,\n    traits: ['Metaphysics', 'Prescience', 'All futures'],\n  },\n  {\n    cognitiveFunctionType: Ni,\n    traits: ['Willpower', 'Future'],\n  },\n];\n\nexport function getCognitiveFunctionData(\n  cognitiveFunction: CognitiveFunctionType\n): CognitiveFunctionData | undefined {\n  const records = data.filter(\n    (t) => t.cognitiveFunctionType === cognitiveFunction\n  );\n  if (records.length > 0) {\n    return records[0];\n  }\n  return undefined;\n}\n","import React from 'react';\nimport { CognitiveFunctionTable } from '../../components/cognitive-function-table/cognitive-function-table';\nimport {\n  enfj,\n  enfp,\n  entj,\n  entp,\n  esfj,\n  esfp,\n  estj,\n  estp,\n  infj,\n  infp,\n  intj,\n  intp,\n  isfj,\n  isfp,\n  istj,\n  istp,\n} from '../../data/cognitive-funcion-data';\n\nconst introverts = [intj, infj, intp, infp, istj, isfj, istp, isfp];\n\nconst extraverts = [entj, enfj, entp, enfp, estj, esfj, estp, esfp];\n\nexport const CognitiveFunctionPage = () => {\n  return (\n    <div>\n      <CognitiveFunctionTable personalities={introverts} title=\"Introverts:\" />\n      <CognitiveFunctionTable personalities={extraverts} title=\"Extroverts:\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const NavigationBar = () => {\n  return (\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Inspect</Link>\n          </li>\n          <li>\n            <Link to=\"/comparison\">Comparison</Link>\n          </li>\n          <li>\n            <Link to=\"/cognitiveFunctions\">Cognitive functions</Link>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\n\nexport interface ActivePersonalityTypeSelector {\n  activePersonalities: Personality[];\n\n  activate(personality: Personality): void;\n  deactivatePersonality(personality: Personality): void;\n  toggle(personality: Personality): void;\n  isActive(personality: Personality): boolean;\n}\n\nexport const useActivePersonalityTypes = (): ActivePersonalityTypeSelector => {\n  const [activePersonalities, setActivePersonalities] = useState<Personality[]>(\n    []\n  );\n  return {\n    activePersonalities,\n\n    activate(personality: Personality) {\n      if (!activePersonalities.includes(personality)) {\n        setActivePersonalities([...activePersonalities, personality]);\n      }\n    },\n\n    deactivatePersonality(personality: Personality) {\n      if (activePersonalities.includes(personality)) {\n        setActivePersonalities(\n          activePersonalities.filter((p) => p !== personality)\n        );\n      }\n    },\n\n    toggle(personality: Personality) {\n      if (activePersonalities.includes(personality)) {\n        setActivePersonalities(\n          activePersonalities.filter((p) => p !== personality)\n        );\n      } else {\n        setActivePersonalities([...activePersonalities, personality]);\n      }\n    },\n\n    isActive(personality: Personality): boolean {\n      return activePersonalities.includes(personality);\n    },\n  };\n};\n","import { CSSProperties } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\n\ninterface CognitiveFunctionDescriptionProps {\n  personality: Personality;\n}\n\nconst rowStyle: CSSProperties = {\n  borderRight: '1px solid black',\n};\n\nexport const CognitiveFunctionView = ({\n  personality,\n}: CognitiveFunctionDescriptionProps) => {\n  return (\n    <table\n      style={{\n        width: '100%',\n        borderBottom: '1px solid black',\n        borderTop: '2px solid black',\n        borderCollapse: 'collapse',\n      }}\n    >\n      <tr\n        style={{\n          borderBottom: '1px solid black',\n          borderCollapse: 'collapse',\n        }}\n      >\n        <td style={rowStyle}>{personality.hero}</td>\n        <td style={rowStyle}>{personality.parent}</td>\n        <td style={rowStyle}>{personality.child}</td>\n        <td\n          style={{\n            ...rowStyle,\n            borderRight: undefined,\n          }}\n        >\n          {personality.inferior}\n        </td>\n      </tr>\n      <tr>\n        <td style={rowStyle}>{personality.nemesis}</td>\n        <td style={rowStyle}>{personality.critic}</td>\n        <td style={rowStyle}>{personality.trickster}</td>\n        <td style={rowStyle}>{personality.demon}</td>\n      </tr>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\nimport { ActivePersonalityTypeSelector } from '../inspect/active-personality-type-selector';\n\ninterface CellProps {\n  personality: Personality;\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const Cell = ({ personality, states }: CellProps) => {\n  const [cursorOver, setCursorOver] = useState(false);\n  const { isActive, toggle } = states;\n  const active = isActive(personality);\n  const onClick = () => toggle(personality);\n\n  return (\n    <div\n      onMouseOver={() => setCursorOver(true)}\n      onMouseOut={() => setCursorOver(false)}\n      onClick={onClick}\n      style={{\n        background: getPersonalityTypeColor(personality, active),\n        width: '6rem',\n        height: '3rem',\n        border: '2px solid black',\n        borderRadius: '6px',\n        userSelect: 'none',\n      }}\n    >\n      <div\n        style={{\n          width: '6rem',\n          height: '3rem',\n          textAlign: 'center',\n          lineHeight: '3rem',\n          fontWeight: cursorOver ? 'bold' : 'initial',\n        }}\n      >\n        {personality.type}\n      </div>\n    </div>\n  );\n};\n\nexport function getPersonalityTypeColor(\n  personality: Personality,\n  selected: boolean\n): string {\n  const type = personality.type;\n  const intuitive = type[1] === 'N';\n  const sensor = type[1] === 'S';\n  const thinker = type[2] === 'T';\n  const feeler = type[2] === 'F';\n  const judger = type[3] === 'J';\n  const perceiver = type[3] === 'P';\n\n  const analytic = intuitive && thinker;\n  if (analytic && selected) {\n    return 'violet';\n  }\n\n  const diplomat = intuitive && feeler;\n  if (diplomat && selected) {\n    return 'lightgreen';\n  }\n\n  const sentinel = sensor && judger;\n  if (sentinel && selected) {\n    return 'lightblue';\n  }\n\n  if (perceiver && selected) {\n    return 'yellow';\n  }\n\n  return 'white';\n}\n","import { useState } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\nimport { ActivePersonalityTypeSelector } from '../inspect/active-personality-type-selector';\nimport { getPersonalityTypeColor } from './cell';\n\ninterface PersonalityDetailTitleProps {\n  personality: Personality;\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const PersonalityDetailTitle = ({\n  personality,\n  states,\n}: PersonalityDetailTitleProps) => {\n  const [active, setActive] = useState(false);\n  const opacity = active ? 0.3 : 0.2;\n  const { deactivatePersonality } = states;\n  return (\n    <div\n      style={{\n        background: getPersonalityTypeColor(personality, true),\n        lineHeight: '1.5rem',\n        fontWeight: 'bold',\n        position: 'relative',\n      }}\n    >\n      {personality.type}\n      <span\n        style={{\n          right: '0rem',\n          top: 0,\n          padding: '0.0rem 0.4rem 0rem 0.4rem',\n          position: 'absolute',\n          background: `rgba(0,0,0,${opacity})`,\n          userSelect: 'none',\n        }}\n        onMouseOver={() => setActive(true)}\n        onMouseLeave={() => setActive(false)}\n        onClick={() => deactivatePersonality(personality)}\n      >\n        x\n      </span>\n    </div>\n  );\n};\n","import {\n  CognitiveFunctionType,\n  Personality,\n} from '../../data/cognitive-funcion-data';\nimport {\n  CogntiveFunctionPosition,\n  getCognitiveFunctionData,\n} from '../../data/cognitive-function-roles';\nimport { ActivePersonalityTypeSelector } from '../inspect/active-personality-type-selector';\nimport { CognitiveFunctionView } from './cognitive-function-view';\nimport { PersonalityDetailTitle } from './personality-detail-title';\n\ninterface PersonalityDetailProps {\n  personality: Personality;\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const PersonalityDetail = ({\n  personality,\n  states,\n}: PersonalityDetailProps) => {\n  return (\n    <div\n      style={{\n        minWidth: '15rem',\n        border: '2px solid black',\n        marginRight: '1rem',\n        paddingBottom: '0.5em',\n        textAlign: 'center',\n        borderRadius: '0.5rem',\n        overflow: 'hidden',\n      }}\n    >\n      <PersonalityDetailTitle personality={personality} states={states} />\n      <CognitiveFunctionView personality={personality} />\n      <CognitiveFunctionDescriptions personality={personality} />\n    </div>\n  );\n};\n\nconst CognitiveFunctionDescriptions = ({\n  personality,\n}: CognitiveFunctionDescriptionsProps) => {\n  const { hero, parent, child, inferior, nemesis, critic, trickster, demon } =\n    personality;\n\n  return (\n    <>\n      <SingleCognitiveFunction\n        cognitiveFunction={hero}\n        position={CogntiveFunctionPosition.hero}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={parent}\n        position={CogntiveFunctionPosition.parent}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={child}\n        position={CogntiveFunctionPosition.child}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={inferior}\n        position={CogntiveFunctionPosition.inferior}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={nemesis}\n        position={CogntiveFunctionPosition.nemesis}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={critic}\n        position={CogntiveFunctionPosition.critic}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={trickster}\n        position={CogntiveFunctionPosition.trickster}\n      />\n      <SingleCognitiveFunction\n        cognitiveFunction={demon}\n        position={CogntiveFunctionPosition.demon}\n      />\n    </>\n  );\n};\n\ninterface SingleCognitiveFunctionProps {\n  position: CogntiveFunctionPosition;\n  cognitiveFunction: CognitiveFunctionType;\n}\n\nconst SingleCognitiveFunction = ({\n  cognitiveFunction,\n  position,\n}: SingleCognitiveFunctionProps) => {\n  const data = getCognitiveFunctionData(cognitiveFunction);\n  if (!data) {\n    return (\n      <div\n        style={{\n          color: 'red',\n        }}\n      >\n        No Data Available\n      </div>\n    );\n  }\n  const traitsView = data.traits.map((t) => <div>{`* ${t}`}</div>);\n  return (\n    <>\n      <div\n        style={{\n          fontWeight: 'bold',\n          borderBottom: '1px solid black',\n          borderTop: '1px solid black',\n        }}\n      >\n        {cognitiveFunction}\n        <span\n          style={{\n            fontWeight: 'initial',\n          }}\n        >\n          {` (${position})`}\n        </span>\n      </div>\n      <div\n        style={{\n          textAlign: 'left',\n          paddingLeft: '0.2rem',\n        }}\n      >\n        {traitsView}\n      </div>\n    </>\n  );\n};\n\ninterface CognitiveFunctionDescriptionsProps {\n  personality: Personality;\n}\n","import { Personality } from '../../data/cognitive-funcion-data';\nimport { ActivePersonalityTypeSelector } from '../inspect/active-personality-type-selector';\nimport { Cell } from './cell';\n\ninterface SegmentProps {\n  types: Personality[];\n  states: ActivePersonalityTypeSelector;\n}\nexport const Segment = ({ types, states }: SegmentProps) => {\n  const [type1, type2, type3, type4] = types;\n  return (\n    <table>\n      <tr>\n        <td>\n          <Cell personality={type1} states={states} />\n        </td>\n        <td>\n          <Cell personality={type2} states={states} />\n        </td>\n      </tr>\n      <tr>\n        <td>\n          <Cell personality={type3} states={states} />\n        </td>\n        <td>\n          <Cell personality={type4} states={states} />\n        </td>\n      </tr>\n    </table>\n  );\n};\n","import { CSSProperties } from 'react';\nimport {\n  enfj,\n  enfp,\n  entj,\n  entp,\n  esfj,\n  esfp,\n  estj,\n  estp,\n  infj,\n  infp,\n  intj,\n  intp,\n  isfj,\n  isfp,\n  istj,\n  istp,\n} from '../../data/cognitive-funcion-data';\nimport { ActivePersonalityTypeSelector } from '../inspect/active-personality-type-selector';\nimport { Segment } from './segment';\n\nconst titles: CSSProperties = {\n  textAlign: 'center',\n};\n\ninterface PersonalityTypeSelectorProps {\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const PersonalityTypeSelector = ({\n  states,\n}: PersonalityTypeSelectorProps) => {\n  const inTypes = [intj, infj, intp, infp];\n  const isTypes = [istj, isfj, istp, isfp];\n  const enTypes = [entj, enfj, entp, enfp];\n  const esTypes = [estj, esfj, estp, esfp];\n\n  return (\n    <table>\n      <tr>\n        <td />\n        <td>\n          <div style={titles}>Intuitives</div>\n        </td>\n        <td>\n          <div style={titles}>Sensors</div>\n        </td>\n      </tr>\n      <tr>\n        <td>Introverted</td>\n        <td>\n          <Segment types={inTypes} states={states} />\n        </td>\n        <td>\n          <Segment types={isTypes} states={states} />\n        </td>\n      </tr>\n      <tr>\n        <td>Extroverted</td>\n        <td>\n          <Segment types={enTypes} states={states} />\n        </td>\n        <td>\n          <Segment types={esTypes} states={states} />\n        </td>\n      </tr>\n    </table>\n  );\n};\n","import { useActivePersonalityTypes } from '../inspect/active-personality-type-selector';\nimport { PersonalityDetail } from './personality-detail';\nimport { PersonalityTypeSelector } from './personality-type-selector';\n\nexport const ComparisonPage = () => {\n  const states = useActivePersonalityTypes();\n  const { activePersonalities } = states;\n  const detailComponents = activePersonalities.map((t) => {\n    return (\n      <td>\n        <PersonalityDetail personality={t} states={states} />\n      </td>\n    );\n  });\n\n  return (\n    <div>\n      <PersonalityTypeSelector states={states} />\n      <table>\n        <tr>{detailComponents}</tr>\n      </table>\n    </div>\n  );\n};\n","interface HeaderColumnProps {\n  title: string;\n}\n\nexport const HeaderColumn = ({ title }: HeaderColumnProps) => {\n  return (\n    <th\n      style={{\n        border: '2px solid black',\n        width: '7rem',\n      }}\n    >\n      {title}\n    </th>\n  );\n};\n","import { useState } from 'react';\nimport { Personality } from '../../data/cognitive-funcion-data';\nimport { getPersonalityTypeColor } from '../comparison/cell';\nimport { ActivePersonalityTypeSelector } from './active-personality-type-selector';\n\ninterface PersonalityRowProps {\n  personality: Personality;\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const PersonalityRow = ({\n  personality,\n  states,\n}: PersonalityRowProps) => {\n  const { toggle } = states;\n  const isActive = states.isActive(personality);\n  const activeColor = getPersonalityTypeColor(personality, isActive);\n  const [active, setActive] = useState(false);\n  const borderWeight = active || isActive ? 2 : 1;\n  return (\n    <td\n      style={{\n        border: `${borderWeight}px solid black`,\n        textAlign: 'center',\n        background: activeColor,\n        userSelect: 'none',\n        fontWeight: active ? 'bold' : 'normal',\n      }}\n      onClick={() => toggle(personality)}\n      onMouseOver={() => setActive(true)}\n      onMouseOut={() => setActive(false)}\n    >\n      {personality.type}\n    </td>\n  );\n};\n","import { CSSProperties } from 'react';\n\ninterface RowColumnProps {\n  direct?: boolean;\n  informative?: boolean;\n  initiative?: boolean;\n  responding?: boolean;\n  control?: boolean;\n  moving?: boolean;\n}\nexport const RowColumn = ({\n  direct,\n  informative,\n  initiative,\n  responding,\n  control,\n  moving,\n}: RowColumnProps) => {\n  const style: CSSProperties = {\n    border: '2px solid black',\n    padding: '0.2rem',\n    margin: '0.1rem',\n    borderRadius: '0.3rem',\n    fontSize: '1rem',\n    marginBottom: '0.2rem',\n  };\n  const directRow = direct ? (\n    <div style={{ ...style, background: 'violet' }}>Direct</div>\n  ) : undefined;\n  const informativeRow = informative ? (\n    <div style={{ ...style, background: 'lightgreen' }}>Informative</div>\n  ) : undefined;\n  const initiativeRow = initiative ? (\n    <div style={{ ...style, background: 'aqua' }}>Initiative</div>\n  ) : undefined;\n  const respondingRow = responding ? (\n    <div style={{ ...style, background: 'lemonChiffon' }}>Responding</div>\n  ) : undefined;\n  const controlRow = control ? (\n    <div style={{ ...style, background: 'hotpink' }}>Controlling</div>\n  ) : undefined;\n  const movingRow = moving ? (\n    <div style={{ ...style, background: '#9AADFA' }}>Moving</div>\n  ) : undefined;\n  return (\n    <td\n      style={{\n        border: '1px solid black',\n        textAlign: 'center',\n      }}\n    >\n      <>\n        {directRow}\n        {informativeRow}\n        {initiativeRow}\n        {respondingRow}\n        {controlRow}\n        {movingRow}\n      </>\n    </td>\n  );\n};\n","import {\n  enfj,\n  enfp,\n  entj,\n  entp,\n  esfj,\n  esfp,\n  estj,\n  estp,\n  infj,\n  infp,\n  intj,\n  intp,\n  isfj,\n  isfp,\n  istj,\n  istp,\n} from '../../data/cognitive-funcion-data';\nimport { ActivePersonalityTypeSelector } from './active-personality-type-selector';\nimport { HeaderColumn } from './header-column';\nimport { PersonalityRow } from './personality-row';\nimport { RowColumn } from './row-column';\n\nconst inCharge = [estj, estp, entj, enfj];\nconst starter = [esfj, esfp, entp, enfp];\nconst seeItThrough = [istj, istp, intj, infj];\nconst behind = [isfj, isfp, intp, infp];\n\ninterface InspectViewProps {\n  states: ActivePersonalityTypeSelector;\n}\n\nexport const InspectTable = ({ states }: InspectViewProps) => {\n  const inChargeRow = <RowColumn direct initiative control />;\n  const startersRow = <RowColumn informative initiative moving />;\n  const sitRow = <RowColumn direct responding moving />;\n  const behindRow = <RowColumn informative responding control />;\n\n  const inChargeRows = inCharge.map((p) => (\n    <PersonalityRow personality={p} states={states} />\n  ));\n  const starters = starter.map((p) => (\n    <PersonalityRow personality={p} states={states} />\n  ));\n  const sits = seeItThrough.map((p) => (\n    <PersonalityRow personality={p} states={states} />\n  ));\n  const behinds = behind.map((p) => (\n    <PersonalityRow personality={p} states={states} />\n  ));\n\n  return (\n    <table>\n      <tr>\n        <HeaderColumn title=\"Comunication style\" />\n        <HeaderColumn title=\"Guardians\" />\n        <HeaderColumn title=\"Artisans\" />\n        <HeaderColumn title=\"Analytics\" />\n        <HeaderColumn title=\"Idealists\" />\n      </tr>\n      <tr>{[inChargeRow, ...inChargeRows]}</tr>\n      <tr>{[startersRow, ...starters]}</tr>\n      <tr>{[sitRow, ...sits]}</tr>\n      <tr>{[behindRow, ...behinds]}</tr>\n    </table>\n  );\n};\n","import { PersonalityDetail } from '../comparison/personality-detail';\nimport {\n  ActivePersonalityTypeSelector,\n  useActivePersonalityTypes,\n} from './active-personality-type-selector';\nimport { InspectTable } from './inspect-table';\n\nexport const InspectPage = () => {\n  const states = useActivePersonalityTypes();\n  return (\n    <>\n      <InspectTable states={states} />\n      <PersonalityDetailView states={states} />\n    </>\n  );\n};\n\ninterface PersonalityDetailViewProps {\n  states: ActivePersonalityTypeSelector;\n}\n\nconst PersonalityDetailView = ({ states }: PersonalityDetailViewProps) => {\n  const { activePersonalities } = states;\n  const personalitiesView = activePersonalities.map((p) => (\n    <PersonalityDetail personality={p} states={states} />\n  ));\n  return (\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      {personalitiesView}\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { CognitiveFunctionPage } from './pages/cognitive-functions/cognitive-functions-page';\nimport { NavigationBar } from './navigation/navigation';\nimport { ComparisonPage } from './pages/comparison/comparison-page';\nimport { InspectPage } from './pages/inspect/inspect-page';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <InspectPage />\n        </Route>\n        <Route path=\"/cognitiveFunctions\">\n          <CognitiveFunctionPage />\n        </Route>\n        <Route path=\"/comparison\">\n          <ComparisonPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}